# Journai Travel App - Local Development with Docker
# For local testing before GCP deployment

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: journai-postgres
    environment:
      POSTGRES_DB: journai_db
      POSTGRES_USER: journai_user
      POSTGRES_PASSWORD: journai_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U journai_user -d journai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: journai-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Journai App
  app:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.local
    container_name: journai-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://journai_user:journai_password@postgres:5432/journai_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-here
      - VITE_SUPABASE_URL=http://localhost:3000
      - VITE_SUPABASE_ANON_KEY=demo-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../src:/app/src
      - ../public:/app/public
    command: npm run dev

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: journai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.local.conf:/etc/nginx/nginx.conf
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data: